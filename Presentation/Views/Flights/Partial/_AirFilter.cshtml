@model Infrastructure.HelpingModel.API.Availability
@using Infrastructure.HelpingModel;
@using Infrastructure.HelpingModel.API;
@using Infrastructure;
@using Common;

@if (Model != null && Model.Contracts != null && Model.Contracts.Count > 0)
{
    ContractFacets facet = Model.Factes;
    AirMatrixMain airlines = Model.AirlineMatrixMain;
    CurrencyMaster currencyMaster = Presentation.Controllers.ShareUtility.GetCurrency(Request);
    <div class="leftCntr">
        <!--Mobile tab -->
        <div class="mobile_filter_tab">
            <h4>Filters</h4>
            <a href="javascript:void(0);" class="close_filter"><i class="bi bi-x-circle"></i></a>
            <ul>
                <li class="active"> <a class="active" data-toggle="tab" href="#stop">Stops</a></li>
                <li> <a data-toggle="tab" href="#time">Time</a></li>
                <li> <a data-toggle="tab" href="#price">Price</a></li>
                <li> <a data-toggle="tab" href="#airlines">Airlines</a></li>
            </ul>
        </div>
        <!--Mobile tab -->
        <div class="holder">
            <div class="tab-content">
                @if (facet != null && facet.Stops.Count > 0)
                {
                    <div id="stop" class="filterBox tab-pane active">
                        <h3 class="head">Stops</h3>
                        <ul class="filter__list inputSet">
                            @foreach (KeyValueData item in facet.Stops)
                            {
                                <li>
                                    <label><input type="checkbox" onclick="contractFilter.setStops();" name="Stops" value="@item.Key" id="@string.Format("Stops{0}",item.Key)"><span>@item.Value</span> </label>
                                    <span class="price chgWithCurrency" default-price="@item.MinPrice">@String.Format("{0}{1:0}.", currencyMaster.CurrencySymbol, Math.Truncate(item.MinPrice))<sup class="chgCurrencySub" default-price="@item.MinPrice">@String.Format("{0:#.00}", (item.MinPrice - Convert.ToSingle(Math.Truncate(item.MinPrice))))</sup></span>
                                </li>
                            }
                        </ul>
                    </div>
                }
                <div id="price" class="filterBox tab-pane fade">
                    <h3 class="head">Price</h3>
                    <input class="priceRange" type="hidden" id="priceRange" readonly="" data-default-min="@String.Format("{0:0.00}",facet.MinPrice)" data-default-max="@String.Format("{0:0.00}",facet.MaxPrice)" data-default-currencySymbol="@currencyMaster.CurrencySymbol" data-default-currencyPrice="@currencyMaster.CurrencyPrice">
                    <p class="range_text">
                        <span class="min-range chgcomplete" id="priceLeft" default-price="@facet.MinPrice">@String.Format("{0}{1:0.00}", currencyMaster.CurrencySymbol, facet.MinPrice * currencyMaster.CurrencyPrice)</span>
                        <span class="max-range chgcomplete" id="priceRight" default-price="@facet.MaxPrice">@String.Format("{0}{1:0.00}", currencyMaster.CurrencySymbol, facet.MaxPrice * currencyMaster.CurrencyPrice)</span>
                    </p>
                    <div class="slider-range" id="priceSlider"></div>
                    <div class="clearfix"></div>
                </div>

                <div id="time" class="filterBox tab-pane fade">
                    <h3 class="head">Time</h3>

                    <div class="subheading">Depart from @Utility.GetAirportCity(Model.Factes.Search.Origin)</div>
                    <ul class="time_filter" id="departTimeFilter">
                        <li onclick="contractFilter.setOutboundDepTime(0,360);">
                            <span class="icons icon_earlymorning"></span>
                            <strong>Early Morning</strong>
                            <div class="time">12am - 5:59am</div>
                        </li>
                        <li onclick="contractFilter.setOutboundDepTime(361,720);">
                            <span class="icons icon_morning"></span>
                            <strong>Morning</strong>
                            <div class="time">6am - 11:59am</div>
                        </li>

                        <li onclick="contractFilter.setOutboundDepTime(721,1080);">
                            <span class="icons icon_afternoon"></span>
                            <strong>Afternoon</strong>
                            <div class="time">12pm - 5:59pm</div>
                        </li>
                        <li onclick="contractFilter.setOutboundDepTime(1081,1440);">
                            <span class="icons icon_evening"></span>
                            <strong>Evening</strong>
                            <div class="time">6pm - 11:59pm</div>
                        </li>
                    </ul>

                    @if (facet.TripType == TripType.ROUNDTRIP)
                    {
                        <div class="subheading">Retrun from @Utility.GetAirportCity(Model.Factes.Search.Destination)</div>
                        <ul class="time_filter" id="returnTimeFilter">
                            <li onclick="contractFilter.setInboundDepTime(0,360);">
                                <span class="icons icon_earlymorning"></span>
                                <strong>Early Morning</strong>
                                <div class="time">12am - 5:59am</div>
                            </li>
                            <li onclick="contractFilter.setInboundDepTime(361,720);">
                                <span class="icons icon_morning"></span>
                                <strong>Morning</strong>
                                <div class="time">6am - 11:59am</div>
                            </li>
                            <li onclick="contractFilter.setInboundDepTime(721,1080);">
                                <span class="icons icon_afternoon"></span>
                                <strong>Afternoon</strong>
                                <div class="time">12pm - 5:59pm</div>
                            </li>
                            <li onclick="contractFilter.setInboundDepTime(1081,1440);">
                                <span class="icons icon_evening"></span>
                                <strong>Evening</strong>
                                <div class="time">6pm - 11:59pm</div>
                            </li>
                        </ul>
                    }
                </div>
                @if (Model.FilterAirports != null)
                {

                    <div class="filterBox d-none d-lg-block">
                        <h3 class="head">Airports</h3>

                        @if (Model.FilterAirports != null && Model.FilterAirports.DepartAirports != null && Model.FilterAirports.DepartAirports.Count > 0)
                        {
                            <div class="subheading">Departure</div>
                            <ul class="filter__list inputSet">
                                @foreach (var air in Model.FilterAirports.DepartAirports)
                                {
                                    <li><label><input type="checkbox" name="DepartureAirports" value="@air.Code" id="@string.Format("DepartureAirports{0}",air.Code)" onclick="contractFilter.setDepartureAirports();"><span class="text-overflow">(@air.Code) @air.Name</span> </label></li>
                                }
                            </ul>
                        }

                        @if (Model.FilterAirports != null && Model.FilterAirports.ReturnAirports != null && Model.FilterAirports.ReturnAirports.Count > 0)
                        {
                            <div class="return_time">
                                <div class="subheading">Return</div>
                                <ul class="filter__list inputSet">
                                    @foreach (var air in Model.FilterAirports.ReturnAirports)
                                    {
                                        <li><label><input type="checkbox" name="ReturnAirports" value="@air.Code" id="@string.Format("ReturnAirports{0}",air.Code)" onclick="contractFilter.setReturnAirports();"><span class="text-overflow">(@air.Code) @air.Name</span> </label></li>
                                    }
                                </ul>
                            </div>
                        }
                        <div class="clearfix"></div>
                    </div>
                }
                <div id="airlines">
                    <div class="filterBox tab-pane fade">
                        <h3 class="head">Airlines</h3>
                        <ul class="filter__list inputSet">
                            @foreach (Airline item in Model.UniqueAirlineList)
                            {
                                <li>
                                    <label>
                                        <input type="checkbox" name="Airlines" onclick="contractFilter.setAirlines();" value="@string.Format("{0}|{1}", item.Code, (item.IsMultiAirline ? 1 : 0))" id="@string.Format("Airlines{0}",item.Code)"><span class="text-overflow">@item.Name</span>
                                        @*<img src="~/Images/icons/multi-airlines.png" alt="multiple airlines" title="multiple airlines" class="multiairline" />*@
                                    </label>
                                    <span class="price chgWithCurrency" default-price="@item.MinPrice">@String.Format("{0}{1:0}.", currencyMaster.CurrencySymbol, Math.Truncate(item.MinPrice))<sup class="chgCurrencySub" default-price="@item.MinPrice">@String.Format("{0:#.00}", (item.MinPrice - Convert.ToSingle(Math.Truncate(item.MinPrice))))</sup></span>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="filter_action_button">
            <a href="javascript:void(0);">Reset</a>
            <a href="javascript:void(0);" class="active apply-filter">Apply</a>
        </div>
    </div>
}